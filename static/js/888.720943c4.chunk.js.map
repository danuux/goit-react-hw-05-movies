{"version":3,"file":"static/js/888.720943c4.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.module.css","components/MovieDetails/MovieDetails.jsx","services/GetMoviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { Suspense, useRef } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Outlet, Link, useLocation, useParams } from 'react-router-dom';\nimport { getDetails } from 'services/GetMoviesAPI';\n\nimport s from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  function formatAsPercent(num) {\n    return new Intl.NumberFormat('default', {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(num / 10);\n  }\n\n  return (\n    <>\n      <div className={s.wrapper}>\n        <div>\n          <Link to={backLink.current} className={s.link}>\n            <button className={s.backBtn}>‚Üê Go back</button>\n          </Link>\n          <img\n            src={\n              movie.poster_path\n                ? `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n            }\n            alt={`${movie.title}`}\n          />\n        </div>\n        <div className={s.details}>\n          <h2>\n            {movie.title} ({movie.release_date.slice(0, 4)})\n          </h2>\n          <p>User score: {formatAsPercent(movie.vote_average)}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{movie.genres.map(genre => genre.name).join(' / ')}</p>\n        </div>\n      </div>\n\n      <div className={s.additional}>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to={'cast'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '9846a25586cb6516e86c6e34d3ea8045';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = baseURL;\n\nexport const getTrending = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const getQuery = async (query) => {\n  try {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movies by query:', error);\n    return [];\n  }\n};\n\nexport const getDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport const getCast = async (movieId) => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    return [];\n  }\n};\n\nexport const getReviews = async (movieId) => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n\nexport const getMoviesByKeyword = async (keyword) => {\n  try {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${keyword}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movies by keyword:', error);\n    return [];\n  }\n};"],"names":["_location$state$from","_location$state","num","_useState","useState","_useState2","_slicedToArray","movie","setMovie","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","getDetails","then","_jsxs","_Fragment","children","className","s","_jsx","Link","to","current","src","poster_path","concat","alt","title","release_date","slice","vote_average","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","overview","genres","map","genre","name","join","Suspense","fallback","Outlet","API_KEY","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","t0","console","error","stop","apply","arguments","_ref3","_callee3","_context3","_x2","getCast","_ref4","_callee4","_context4","cast","_x3","getReviews","_ref5","_callee5","_context5","_x4","getMoviesByKeyword","_ref6","_callee6","keyword","_context6","_x5"],"sourceRoot":""}