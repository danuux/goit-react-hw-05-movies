{"version":3,"file":"static/js/888.1990b9eb.chunk.js","mappings":"8PACA,GAAiB,E,SC6EjB,EAzEqB,WAAO,IAADA,EAAAC,EACzBC,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACdI,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAA2B,QAArBb,EAAe,QAAfC,EAACS,EAASI,aAAK,IAAAb,OAAA,EAAdA,EAAgBc,YAAI,IAAAf,EAAAA,EAAI,KAWnD,IATAgB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACLC,EAAAA,EAAAA,IAAWlB,GAAS,KAAD,EAAhCc,EAAIC,EAAAI,KACVpB,EAASe,GAAM,wBAAAC,EAAAK,OAAA,GAAAP,EAAA,KAChB,kBAHsB,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAKvBb,GACF,GAAG,CAACT,KAECF,EACH,OAAO,KAGT,IAAwByB,EAQxB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,QAAeF,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEG,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI3B,EAAY4B,QAASL,UAAWC,EAAAA,KAAYF,UACpDG,EAAAA,EAAAA,KAAA,UAAQF,UAAWC,EAAAA,QAAeF,SAAC,sBAErCG,EAAAA,EAAAA,KAAA,OACEI,IACEnC,EAAMoC,YAAW,uCAAAC,OAC0BrC,EAAMoC,aAAW,+EAG9DE,IAAKtC,EAAMuC,YAGfb,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,QAAeF,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACG5B,EAAMuC,MAAM,KAAG,IAAIC,KAAKxC,EAAMyC,cAAcC,cAAc,QAE7DhB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,gBA5BaH,EA4BgBzB,EAAM2C,aA3BrC,IAAIC,KAAKC,aAAa,UAAW,CACtCC,MAAO,UACPC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOxB,EAAM,SAwBVM,EAAAA,EAAAA,KAAA,MAAAH,SAAI,cACJG,EAAAA,EAAAA,KAAA,KAAAH,SAAI5B,EAAMkD,YACVnB,EAAAA,EAAAA,KAAA,MAAAH,SAAI,YACJG,EAAAA,EAAAA,KAAA,KAAAH,SAAI5B,EAAMmD,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,gBAInD7B,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,WAAkBF,SAAA,EAChCG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,4BACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,EAAAA,KAAA,MAAAH,UACEG,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,OAAML,SAAC,YAElBG,EAAAA,EAAAA,KAAA,MAAAH,UACEG,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,UAASL,SAAC,qBAIzBG,EAAAA,EAAAA,KAACyB,EAAAA,SAAQ,CAACC,UAAU1B,EAAAA,EAAAA,KAAA,OAAAH,SAAK,eAAiBA,UACxCG,EAAAA,EAAAA,KAAC2B,EAAAA,GAAM,QAIf,C,+LC1EMC,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAFiB,gCAIjB,IAAMC,EAAS,eAAAjD,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAO+C,GAAQ,IAAAC,EAAA,OAAAjD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENyC,EAAAA,EAAAA,IAAUE,GAAU,KAAD,EAA5B,OAARC,EAAQ9C,EAAAI,KAAAJ,EAAA+C,OAAA,SACPD,EAAS/C,MAAI,OAE0C,OAF1CC,EAAAC,KAAA,EAAAD,EAAAgD,GAAAhD,EAAA,SAEpBiD,QAAQC,MAAM,4BAAD9B,OAA6ByB,EAAQ,KAAA7C,EAAAgD,IAAYhD,EAAA+C,OAAA,SACvD,MAAI,yBAAA/C,EAAAK,OAAA,GAAAP,EAAA,kBAEd,gBARcqD,GAAA,OAAAxD,EAAAW,MAAA,KAAAC,UAAA,KAUF6C,EAAW,eAAAC,GAAAzD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyD,IAAA,IAAAvD,EAAA,OAAAF,IAAAA,MAAA,SAAA0D,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cAAAqD,EAAArD,KAAA,EACN0C,EAAU,8BAADxB,OAA+BsB,IAAW,KAAD,EAA3D,OAAJ3C,EAAIwD,EAAAnD,KAAAmD,EAAAR,OAAA,SACHhD,EAAOA,EAAKyD,QAAU,IAAE,wBAAAD,EAAAlD,OAAA,GAAAiD,EAAA,KAChC,kBAHuB,OAAAD,EAAA/C,MAAA,KAAAC,UAAA,KAUXJ,EAAU,eAAAsD,GAAA7D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6D,EAAOzE,GAAO,OAAAY,IAAAA,MAAA,SAAA8D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,cAAAyD,EAAAzD,KAAA,EACzB0C,EAAU,SAADxB,OAAUnC,EAAO,aAAAmC,OAAYsB,IAAW,KAAD,SAAAiB,EAAAZ,OAAA,SAAAY,EAAAvD,MAAA,wBAAAuD,EAAAtD,OAAA,GAAAqD,EAAA,KAC9D,gBAFsBE,GAAA,OAAAH,EAAAnD,MAAA,KAAAC,UAAA,KAIVsD,EAAO,eAAAC,GAAAlE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkE,EAAO9E,GAAO,IAAAc,EAAA,OAAAF,IAAAA,MAAA,SAAAmE,GAAA,cAAAA,EAAA/D,KAAA+D,EAAA9D,MAAA,cAAA8D,EAAA9D,KAAA,EAChB0C,EAAU,SAADxB,OAAUnC,EAAO,qBAAAmC,OAAoBsB,IAAW,KAAD,EAAjE,OAAJ3C,EAAIiE,EAAA5D,KAAA4D,EAAAjB,OAAA,SACHhD,EAAOA,EAAKkE,KAAO,IAAE,wBAAAD,EAAA3D,OAAA,GAAA0D,EAAA,KAC7B,gBAHmBG,GAAA,OAAAJ,EAAAxD,MAAA,KAAAC,UAAA,KAKP4D,EAAU,eAAAC,GAAAxE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwE,EAAOpF,GAAO,IAAAc,EAAA,OAAAF,IAAAA,MAAA,SAAAyE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EACnB0C,EAAU,SAADxB,OAAUnC,EAAO,qBAAAmC,OAAoBsB,IAAW,KAAD,EAAjE,OAAJ3C,EAAIuE,EAAAlE,KAAAkE,EAAAvB,OAAA,SACHhD,EAAOA,EAAKyD,QAAU,IAAE,wBAAAc,EAAAjE,OAAA,GAAAgE,EAAA,KAChC,gBAHsBE,GAAA,OAAAH,EAAA9D,MAAA,KAAAC,UAAA,KAKViE,EAAkB,eAAAC,GAAA7E,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6E,EAAOC,GAAO,IAAA5E,EAAA,OAAAF,IAAAA,MAAA,SAAA+E,GAAA,cAAAA,EAAA3E,KAAA2E,EAAA1E,MAAA,cAAA0E,EAAA1E,KAAA,EAC3B0C,EAAU,wBAADxB,OAAyBsB,EAAO,WAAAtB,OAAUuD,IAAW,KAAD,EAAtE,OAAJ5E,EAAI6E,EAAAxE,KAAAwE,EAAA7B,OAAA,SACHhD,EAAOA,EAAKyD,QAAU,IAAE,wBAAAoB,EAAAvE,OAAA,GAAAqE,EAAA,KAChC,gBAH8BG,GAAA,OAAAJ,EAAAnE,MAAA,KAAAC,UAAA,I","sources":["components/MovieDetails/MovieDetails.module.css","components/MovieDetails/MovieDetails.jsx","services/GetMoviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, Link, useLocation, useParams } from 'react-router-dom';\nimport { getDetails } from 'services/GetMoviesAPI';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const data = await getDetails(movieId);\n      setMovie(data);\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const formatAsPercent = num => {\n    return new Intl.NumberFormat('default', {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(num / 10);\n  };\n\n  return (\n    <>\n      <div className={styles.wrapper}>\n        <div>\n          <Link to={backLinkRef.current} className={styles.link}>\n            <button className={styles.backBtn}>‚Üê Go back</button>\n          </Link>\n          <img\n            src={\n              movie.poster_path\n                ? `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n            }\n            alt={movie.title}\n          />\n        </div>\n        <div className={styles.details}>\n          <h2>\n            {movie.title} ({new Date(movie.release_date).getFullYear()})\n          </h2>\n          <p>User score: {formatAsPercent(movie.vote_average)}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{movie.genres.map(genre => genre.name).join(' / ')}</p>\n        </div>\n      </div>\n\n      <div className={styles.additional}>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '9846a25586cb6516e86c6e34d3ea8045';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst fetchData = async (endpoint) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching data from ${endpoint}:`, error);\n    return null;\n  }\n};\n\nexport const getTrending = async () => {\n  const data = await fetchData(`trending/movie/day?api_key=${API_KEY}`);\n  return data ? data.results : [];\n};\n\nexport const getQuery = async (query) => {\n  const data = await fetchData(`search/movie?api_key=${API_KEY}&query=${query}`);\n  return data ? data.results : [];\n};\n\nexport const getDetails = async (movieId) => {\n  return await fetchData(`movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getCast = async (movieId) => {\n  const data = await fetchData(`movie/${movieId}/credits?api_key=${API_KEY}`);\n  return data ? data.cast : [];\n};\n\nexport const getReviews = async (movieId) => {\n  const data = await fetchData(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data ? data.results : [];\n};\n\nexport const getMoviesByKeyword = async (keyword) => {\n  const data = await fetchData(`search/movie?api_key=${API_KEY}&query=${keyword}`);\n  return data ? data.results : [];\n};\n"],"names":["_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getDetails","sent","stop","apply","arguments","num","_jsxs","_Fragment","children","className","styles","_jsx","Link","to","current","src","poster_path","concat","alt","title","Date","release_date","getFullYear","vote_average","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","overview","genres","map","genre","name","join","Suspense","fallback","Outlet","API_KEY","axios","fetchData","endpoint","response","abrupt","t0","console","error","_x","getTrending","_ref2","_callee2","_context2","results","_ref4","_callee4","_context4","_x3","getCast","_ref5","_callee5","_context5","cast","_x4","getReviews","_ref6","_callee6","_context6","_x5","getMoviesByKeyword","_ref7","_callee7","keyword","_context7","_x6"],"sourceRoot":""}