{"version":3,"file":"static/js/653.b44cb7ac.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","services/GetMoviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies-list\":\"Movies_movies-list__SUzAB\",\"movie-item\":\"Movies_movie-item__oDxxC\",\"movie-poster\":\"Movies_movie-poster__nC0Hf\",\"movie-title\":\"Movies_movie-title__WFXV1\"};","import React, { useState } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { getMoviesByKeyword } from 'services/GetMoviesAPI';\nimport styles from './Movies.module.css'; \n\nconst SearchMovies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searched, setSearched] = useState(false); \n  const location = useLocation();\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Please enter a search query');\n      return;\n    }\n\n    try {\n      const movies = await getMoviesByKeyword(searchQuery);\n      setSearchResults(movies);\n      setSearched(true);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n      setSearchResults([]);\n      setSearched(true); \n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          placeholder=\"Search for movies...\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {searched && searchResults.length === 0 && (\n        <div>No results found for \"{searchQuery}\". Please try again.</div>\n      )}\n\n      {searchResults.length > 0 && (\n        <div>\n          <h2>Search Results:</h2>\n          <div className={styles['movies-list']}>\n            {searchResults.map(movie => (\n              <NavLink\n                key={movie.id}\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                <div className={styles['movie-item']}>\n                  <img\n                    src={\n                      movie.poster_path\n                        ? `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`\n                        : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n                    }\n                    alt={movie.title}\n                    className={styles['movie-poster']}\n                  />\n                  <span className={styles['movie-title']}>{movie.title}</span>\n                </div>\n              </NavLink>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchMovies;\n","import axios from 'axios';\n\nconst API_KEY = '9846a25586cb6516e86c6e34d3ea8045';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst fetchData = async (endpoint) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching data from ${endpoint}:`, error);\n    return null;\n  }\n};\n\nexport const getTrending = async () => {\n  const data = await fetchData(`trending/movie/day?api_key=${API_KEY}`);\n  return data ? data.results : [];\n};\n\nexport const getQuery = async (query) => {\n  const data = await fetchData(`search/movie?api_key=${API_KEY}&query=${query}`);\n  return data ? data.results : [];\n};\n\nexport const getDetails = async (movieId) => {\n  return await fetchData(`movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getCast = async (movieId) => {\n  const data = await fetchData(`movie/${movieId}/credits?api_key=${API_KEY}`);\n  return data ? data.cast : [];\n};\n\nexport const getReviews = async (movieId) => {\n  const data = await fetchData(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data ? data.results : [];\n};\n\nexport const getMoviesByKeyword = async (keyword) => {\n  const data = await fetchData(`search/movie?api_key=${API_KEY}&query=${keyword}`);\n  return data ? data.results : [];\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","searched","setSearched","location","useLocation","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","movies","_context","prev","next","preventDefault","trim","alert","abrupt","getMoviesByKeyword","sent","t0","console","error","stop","_x","apply","arguments","_jsxs","children","onSubmit","_jsx","type","placeholder","value","onChange","target","length","className","styles","map","movie","NavLink","to","concat","id","state","from","src","poster_path","alt","title","API_KEY","axios","fetchData","endpoint","response","data","getTrending","_ref2","_callee2","_context2","results","getDetails","_ref4","_callee4","movieId","_context4","_x3","getCast","_ref5","_callee5","_context5","cast","_x4","getReviews","_ref6","_callee6","_context6","_x5","_ref7","_callee7","keyword","_context7","_x6"],"sourceRoot":""}