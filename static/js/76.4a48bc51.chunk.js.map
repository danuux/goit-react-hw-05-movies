{"version":3,"file":"static/js/76.4a48bc51.chunk.js","mappings":"oPACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAkF,oB,SC4ClF,EAxCa,WACX,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACGC,EAAAA,EAAAA,IAAQZ,GAAS,KAAD,EAA7BQ,EAAIC,EAAAI,KACVd,EAAQS,GAAM,wBAAAC,EAAAK,OAAA,GAAAP,EAAA,KACf,kBAHc,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAKfb,GACF,GAAG,CAACH,IAECF,EAAKmB,QAKRC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAeF,SAC3BrB,EAAKwB,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAaH,EAAbG,cAAeC,EAAIJ,EAAJI,KAAMC,EAASL,EAATK,UAAS,OAC3DC,EAAAA,EAAAA,MAAA,MAAaT,UAAWC,EAAYF,SAAA,EAClCD,EAAAA,EAAAA,KAAA,OACEE,UAAWC,EACXS,IACEL,EAAY,uCAAAM,OAC+BN,GAAY,+EAGzDO,IAAKN,KAEPR,EAAAA,EAAAA,KAAA,MAAAC,SAAKQ,KACLE,EAAAA,EAAAA,MAAA,KAAAV,SAAA,CAAG,OAAKS,OAXDJ,EAYJ,QAnBJ,IAwBX,C,+LCzCMS,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAFiB,gCAIjB,IAAMC,EAAS,eAAA/B,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAO6B,GAAQ,IAAAC,EAAA,OAAA/B,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENuB,EAAAA,EAAAA,IAAUE,GAAU,KAAD,EAA5B,OAARC,EAAQ5B,EAAAI,KAAAJ,EAAA6B,OAAA,SACPD,EAAS7B,MAAI,OAE0C,OAF1CC,EAAAC,KAAA,EAAAD,EAAA8B,GAAA9B,EAAA,SAEpB+B,QAAQC,MAAM,4BAADV,OAA6BK,EAAQ,KAAA3B,EAAA8B,IAAY9B,EAAA6B,OAAA,SACvD,MAAI,yBAAA7B,EAAAK,OAAA,GAAAP,EAAA,kBAEd,gBARcmC,GAAA,OAAAtC,EAAAW,MAAA,KAAAC,UAAA,KAUF2B,EAAW,eAAApB,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsC,IAAA,IAAApC,EAAA,OAAAF,IAAAA,MAAA,SAAAuC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EACNwB,EAAU,8BAADJ,OAA+BE,IAAW,KAAD,EAA3D,OAAJzB,EAAIqC,EAAAhC,KAAAgC,EAAAP,OAAA,SACH9B,EAAOA,EAAKsC,QAAU,IAAE,wBAAAD,EAAA/B,OAAA,GAAA8B,EAAA,KAChC,kBAHuB,OAAArB,EAAAR,MAAA,KAAAC,UAAA,KAUX+B,EAAU,eAAAC,GAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2C,EAAOjD,GAAO,OAAAM,IAAAA,MAAA,SAAA4C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EACzBwB,EAAU,SAADJ,OAAU/B,EAAO,aAAA+B,OAAYE,IAAW,KAAD,SAAAiB,EAAAZ,OAAA,SAAAY,EAAArC,MAAA,wBAAAqC,EAAApC,OAAA,GAAAmC,EAAA,KAC9D,gBAFsBE,GAAA,OAAAH,EAAAjC,MAAA,KAAAC,UAAA,KAIVJ,EAAO,eAAAwC,GAAA/C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+C,EAAOrD,GAAO,IAAAQ,EAAA,OAAAF,IAAAA,MAAA,SAAAgD,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EAChBwB,EAAU,SAADJ,OAAU/B,EAAO,qBAAA+B,OAAoBE,IAAW,KAAD,EAAjE,OAAJzB,EAAI8C,EAAAzC,KAAAyC,EAAAhB,OAAA,SACH9B,EAAOA,EAAKV,KAAO,IAAE,wBAAAwD,EAAAxC,OAAA,GAAAuC,EAAA,KAC7B,gBAHmBE,GAAA,OAAAH,EAAArC,MAAA,KAAAC,UAAA,KAKPwC,EAAU,eAAAC,GAAApD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoD,EAAO1D,GAAO,IAAAQ,EAAA,OAAAF,IAAAA,MAAA,SAAAqD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAhD,KAAA,EACnBwB,EAAU,SAADJ,OAAU/B,EAAO,qBAAA+B,OAAoBE,IAAW,KAAD,EAAjE,OAAJzB,EAAImD,EAAA9C,KAAA8C,EAAArB,OAAA,SACH9B,EAAOA,EAAKsC,QAAU,IAAE,wBAAAa,EAAA7C,OAAA,GAAA4C,EAAA,KAChC,gBAHsBE,GAAA,OAAAH,EAAA1C,MAAA,KAAAC,UAAA,KAKV6C,EAAkB,eAAAC,GAAAzD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyD,EAAOC,GAAO,IAAAxD,EAAA,OAAAF,IAAAA,MAAA,SAAA2D,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAtD,KAAA,EAC3BwB,EAAU,wBAADJ,OAAyBE,EAAO,WAAAF,OAAUiC,IAAW,KAAD,EAAtE,OAAJxD,EAAIyD,EAAApD,KAAAoD,EAAA3B,OAAA,SACH9B,EAAOA,EAAKsC,QAAU,IAAE,wBAAAmB,EAAAnD,OAAA,GAAAiD,EAAA,KAChC,gBAH8BG,GAAA,OAAAJ,EAAA/C,MAAA,KAAAC,UAAA,I","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/GetMoviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__XmIBi\",\"item\":\"Cast_item__a0CDL\",\"image\":\"Cast_image__mOsuM\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/GetMoviesAPI';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      const data = await getCast(movieId);\n      setCast(data);\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  if (!cast.length) {\n    return null;\n  }\n\n  return (\n    <div>\n      <ul className={styles.wrapper}>\n        {cast.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id} className={styles.item}>\n            <img\n              className={styles.image}\n              src={\n                profile_path\n                  ? `https://www.themoviedb.org/t/p/w500/${profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={original_name}\n            />\n            <h3>{name}</h3>\n            <p>As: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '9846a25586cb6516e86c6e34d3ea8045';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst fetchData = async (endpoint) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching data from ${endpoint}:`, error);\n    return null;\n  }\n};\n\nexport const getTrending = async () => {\n  const data = await fetchData(`trending/movie/day?api_key=${API_KEY}`);\n  return data ? data.results : [];\n};\n\nexport const getQuery = async (query) => {\n  const data = await fetchData(`search/movie?api_key=${API_KEY}&query=${query}`);\n  return data ? data.results : [];\n};\n\nexport const getDetails = async (movieId) => {\n  return await fetchData(`movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getCast = async (movieId) => {\n  const data = await fetchData(`movie/${movieId}/credits?api_key=${API_KEY}`);\n  return data ? data.cast : [];\n};\n\nexport const getReviews = async (movieId) => {\n  const data = await fetchData(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data ? data.results : [];\n};\n\nexport const getMoviesByKeyword = async (keyword) => {\n  const data = await fetchData(`search/movie?api_key=${API_KEY}&query=${keyword}`);\n  return data ? data.results : [];\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getCast","sent","stop","apply","arguments","length","_jsx","children","className","styles","map","_ref2","id","profile_path","original_name","name","character","_jsxs","src","concat","alt","API_KEY","axios","fetchData","endpoint","response","abrupt","t0","console","error","_x","getTrending","_callee2","_context2","results","getDetails","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4","getReviews","_ref6","_callee6","_context6","_x5","getMoviesByKeyword","_ref7","_callee7","keyword","_context7","_x6"],"sourceRoot":""}