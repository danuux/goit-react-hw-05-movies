{"version":3,"file":"static/js/888.60aa2c4a.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.module.css","components/MovieDetails/MovieDetails.jsx","services/GetMoviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { Suspense, useRef } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Outlet, Link, useLocation, useParams } from 'react-router-dom';\nimport { getDetails } from 'services/GetMoviesAPI';\n\nimport s from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  function formatAsPercent(num) {\n    return new Intl.NumberFormat('default', {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(num / 10);\n  }\n\n  return (\n    <>\n      <div className={s.wrapper}>\n        <div>\n          <Link to={backLink.current} className={s.link}>\n            <button className={s.backBtn}>‚Üê Go back</button>\n          </Link>\n          <img\n            src={\n              movie.poster_path\n                ? `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n            }\n            alt={`${movie.title}`}\n          />\n        </div>\n        <div className={s.details}>\n          <h2>\n            {movie.title} ({movie.release_date.slice(0, 4)})\n          </h2>\n          <p>User score: {formatAsPercent(movie.vote_average)}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{movie.genres.map(genre => genre.name).join(' / ')}</p>\n        </div>\n      </div>\n\n      <div className={s.additional}>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to={'cast'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '9846a25586cb6516e86c6e34d3ea8045';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst fetchData = async (endpoint) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching data from ${endpoint}:`, error);\n    return null;\n  }\n};\n\nexport const getTrending = async () => {\n  const data = await fetchData(`trending/movie/day?api_key=${API_KEY}`);\n  return data ? data.results : [];\n};\n\nexport const getQuery = async (query) => {\n  const data = await fetchData(`search/movie?api_key=${API_KEY}&query=${query}`);\n  return data ? data.results : [];\n};\n\nexport const getDetails = async (movieId) => {\n  return await fetchData(`movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getCast = async (movieId) => {\n  const data = await fetchData(`movie/${movieId}/credits?api_key=${API_KEY}`);\n  return data ? data.cast : [];\n};\n\nexport const getReviews = async (movieId) => {\n  const data = await fetchData(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data ? data.results : [];\n};\n\nexport const getMoviesByKeyword = async (keyword) => {\n  const data = await fetchData(`search/movie?api_key=${API_KEY}&query=${keyword}`);\n  return data ? data.results : [];\n};\n"],"names":["_location$state$from","_location$state","num","_useState","useState","_useState2","_slicedToArray","movie","setMovie","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","getDetails","then","_jsxs","_Fragment","children","className","s","_jsx","Link","to","current","src","poster_path","concat","alt","title","release_date","slice","vote_average","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","overview","genres","map","genre","name","join","Suspense","fallback","Outlet","API_KEY","axios","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","response","_context","prev","next","sent","abrupt","data","t0","console","error","stop","_x","apply","arguments","getTrending","_ref2","_callee2","_context2","results","_ref4","_callee4","_context4","_x3","getCast","_ref5","_callee5","_context5","cast","_x4","getReviews","_ref6","_callee6","_context6","_x5","getMoviesByKeyword","_ref7","_callee7","keyword","_context7","_x6"],"sourceRoot":""}