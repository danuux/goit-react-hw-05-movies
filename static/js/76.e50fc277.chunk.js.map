{"version":3,"file":"static/js/76.e50fc277.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/GetMoviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__XmIBi\",\"item\":\"Cast_item__a0CDL\",\"image\":\"Cast_image__mOsuM\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/GetMoviesAPI';\n\nimport s from './Cast.module.css';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(setMovieCast);\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n\n  return (\n    <>\n      <ul className={s.wrapper}>\n        {movieCast.map(actor => (\n          <li key={actor.id} className={s.item}>\n            <img\n              className={s.image}\n              src={\n                actor.profile_path\n                  ? `https://www.themoviedb.org/t/p/w500/${actor.profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={actor.original_name}\n            />\n            <h3>{actor.name}</h3>\n            <p>As: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '9846a25586cb6516e86c6e34d3ea8045';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = baseURL;\n\nexport const getTrending = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const getQuery = async (query) => {\n  try {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movies by query:', error);\n    return [];\n  }\n};\n\nexport const getDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport const getCast = async (movieId) => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    return [];\n  }\n};\n\nexport const getReviews = async (movieId) => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n\nexport const getMoviesByKeyword = async (keyword) => {\n  try {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${keyword}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movies by keyword:', error);\n    return [];\n  }\n};"],"names":["_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","movieId","useParams","useEffect","getCast","then","_jsx","_Fragment","children","className","s","map","actor","_jsxs","src","profile_path","concat","alt","original_name","name","character","id","API_KEY","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","t0","console","error","stop","apply","arguments","getDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","cast","_x3","getReviews","_ref5","_callee5","_context5","_x4","getMoviesByKeyword","_ref6","_callee6","keyword","_context6","_x5"],"sourceRoot":""}